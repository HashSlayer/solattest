{
  "address": "0x670233A7d72AFdB4A5b4e8dEC29ECf8d980B11b6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessDenied",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyRevoked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Irrevocable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotFound",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "attester",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "recipient",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "uid",
          "type": "uint256"
        }
      ],
      "name": "Attested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "recipient",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "attester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "uid",
          "type": "uint256"
        }
      ],
      "name": "Revoked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "recipient",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "revocable",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "attest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "uid",
          "type": "uint256"
        }
      ],
      "name": "getAttestation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "uid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "revocationTime",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "recipient",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "data",
              "type": "string"
            }
          ],
          "internalType": "struct YourContract.Attestation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "uid",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5d7c1e5ed40c12d31143859f0279e8cd6fa471f6b89f09ab138bfc8569a9b088",
  "receipt": {
    "to": null,
    "from": "0xAd8ac10dc84B365CC9c022B3BB2d194869301B13",
    "contractAddress": "0x670233A7d72AFdB4A5b4e8dEC29ECf8d980B11b6",
    "transactionIndex": 0,
    "gasUsed": "32917960",
    "logsBloom": "0x
    "blockHash": "0x235acf243e3ba8f4cb7afed296befd43945eb009ec7176b8de565e811a745e36",
    "transactionHash": "0x5d7c1e5ed40c12d31143859f0279e8cd6fa471f6b89f09ab138bfc8569a9b088",
    "logs": [],
    "blockNumber": 290580523,
    "cumulativeGasUsed": "32917960",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xAd8ac10dc84B365CC9c022B3BB2d194869301B13"
  ],
  "numDeployments": 1,
  "solcInputHash": "c30b40f02c697cf3b103422c8be585c3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Irrevocable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"recipient\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"name\":\"Attested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"recipient\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"recipient\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"name\":\"getAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revocationTime\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"recipient\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"internalType\":\"struct YourContract.Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Attested(address,string,uint256)\":{\"params\":{\"attester\":\"The attesting account.\",\"recipient\":\"The recipient of the attestation.\",\"uid\":\"The UID the revoked attestation.\"}},\"Revoked(string,address,uint256)\":{\"params\":{\"attester\":\"The attesting account.\",\"recipient\":\"The recipient of the attestation.\",\"uid\":\"The UID the revoked attestation.\"}}},\"kind\":\"dev\",\"methods\":{\"attest(string,bool,string)\":{\"params\":{\"data\":\"The custom attestation data.\",\"recipient\":\"The recipient of the attestation.\",\"revocable\":\"Whether the attestation is revocable.\"},\"returns\":{\"_0\":\"The UID of the new attestation.\"}},\"constructor\":{\"details\":\"Creates a new SolAttest instance.\"},\"getAttestation(uint256)\":{\"params\":{\"uid\":\"The UID of the attestation to retrieve.\"},\"returns\":{\"_0\":\"The attestation data members.\"}}},\"title\":\"SolAttest\",\"version\":1},\"userdoc\":{\"events\":{\"Attested(address,string,uint256)\":{\"notice\":\"Emitted when an attestation has been made.\"},\"Revoked(string,address,uint256)\":{\"notice\":\"Emitted when an attestation has been revoked.\"}},\"kind\":\"user\",\"methods\":{\"attest(string,bool,string)\":{\"notice\":\"Attests to a specific schema.\"},\"getAttestation(uint256)\":{\"notice\":\"Returns an existing attestation by UID.\"}},\"notice\":\"The Solana Attestations protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YourContract.sol\":\"YourContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/YourContract.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nerror AccessDenied();\\nerror NotFound();\\nerror AlreadyRevoked();\\nerror Irrevocable();\\n\\n\\n// Use openzeppelin to inherit battle-tested implementations (ERC20, ERC721, etc)\\n// import \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n// Events: a way to emit log statements from smart contract that can be listened to by external parties\\n// Constructor: Called once on contract deployment\\n// Check packages/hardhat/deploy/00_deploy_your_contract.ts\\n/// @title SolAttest\\n/// @notice The Solana Attestations protocol.\\n\\ncontract YourContract {\\n    uint256 constant EMPTY_UID = 0;\\n    uint64 constant NO_EXPIRATION_TIME = 0;\\n\\taddress public immutable owner;\\n\\n    /// @notice Emitted when an attestation has been made.\\n    /// @param recipient The recipient of the attestation.\\n    /// @param attester The attesting account.\\n    /// @param uid The UID the revoked attestation.\\n\\n    event Attested(address indexed attester, string indexed recipient, uint256 uid);\\n\\n    /// @notice Emitted when an attestation has been revoked.\\n    /// @param recipient The recipient of the attestation.\\n    /// @param attester The attesting account.\\n    /// @param uid The UID the revoked attestation.\\n    event Revoked(string indexed recipient, address indexed attester, uint256 uid);\\n\\n    struct Attestation {\\n        uint256 uid; // A unique identifier of the attestation.\\n        uint256 time; // The time when the attestation was created (Unix timestamp).\\n        uint256 revocationTime; // The time when the attestation was revoked (Unix timestamp).\\n        string recipient; // The recipient of the attestation.\\n        address attester; // The attester/sender of the attestation.\\n        bool revocable; // Whether the attestation is revocable.\\n        string data; // Custom attestation data.\\n    }\\n\\n    // The global mapping between attestations and their UIDs.\\n    uint256 private lastUid = 0;\\n\\n    mapping(uint256 uid => Attestation attestation) private _db;\\n\\n    /// @dev Creates a new SolAttest instance.\\n    constructor(address _owner) {\\n\\towner = _owner;\\n\\t}\\n\\n    /// @notice Attests to a specific schema.\\n    /// @param recipient The recipient of the attestation.\\n    /// @param revocable Whether the attestation is revocable.\\n    /// @param data The custom attestation data.\\n    /// @return The UID of the new attestation.\\n    function attest(string memory recipient, bool revocable, string calldata data) external returns (uint256) {\\n        uint256 _uid = lastUid++;\\n        Attestation memory _attestation;\\n\\n        _attestation.uid = _uid;\\n        _attestation.attester = msg.sender;\\n        _attestation.recipient = recipient;\\n        _attestation.data = data;\\n        _attestation.time = block.timestamp;\\n        _attestation.revocable = revocable;\\n\\n        _db[_uid] = _attestation;\\n\\n        emit Attested(msg.sender, recipient, _uid);\\n\\n        return _uid;\\n    }\\n\\n    function revoke(uint256 uid) external {\\n        Attestation storage attestation = _db[uid];\\n\\n        if (attestation.uid == 0) {\\n            revert NotFound();\\n        }\\n\\n        if (attestation.attester != msg.sender) {\\n            revert AccessDenied();\\n        }\\n\\n        if (attestation.revocationTime != 0) {\\n            revert AlreadyRevoked();\\n        }\\n\\n        if (!attestation.revocable) {\\n            revert Irrevocable();\\n        }\\n\\n        attestation.revocationTime = block.timestamp;\\n    }\\n\\n    /// @notice Returns an existing attestation by UID.\\n    /// @param uid The UID of the attestation to retrieve.\\n    /// @return The attestation data members.\\n    function getAttestation(uint256 uid) external view returns (Attestation memory) {\\n        if (uid > lastUid) {\\n            revert NotFound();\\n        }\\n        return _db[uid];\\n    }\\n}\\n\",\"keccak256\":\"0x62490686cc672f82bb6462413e68c90dbdc8f5ca22c2601b88afefa79ddef88b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526000805534801561001457600080fd5b5060405161099838038061099883398101604081905261003391610044565b6001600160a01b0316608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805161090a61008e60003960006094015261090a6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806320c5429b1461005157806329be4db2146100665780638da5cb5b1461008f578063ad6aebd8146100ce575b600080fd5b61006461005f366004610501565b6100ef565b005b610079610074366004610501565b6101a5565b604051610086919061056a565b60405180910390f35b6100b67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610086565b6100e16100dc36600461065d565b610360565b604051908152602001610086565b6000818152600160205260408120805490910361011f5760405163c5723b5160e01b815260040160405180910390fd5b60048101546001600160a01b0316331461014c57604051634ca8886760e01b815260040160405180910390fd5b60028101541561016f5760405163905e710760e01b815260040160405180910390fd5b6004810154600160a01b900460ff1661019b5760405163157bd4c360e01b815260040160405180910390fd5b4260029091015550565b6101ad6104b9565b6000548211156101d05760405163c5723b5160e01b815260040160405180910390fd5b600160008381526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201805461021c90610746565b80601f016020809104026020016040519081016040528092919081815260200182805461024890610746565b80156102955780601f1061026a57610100808354040283529160200191610295565b820191906000526020600020905b81548152906001019060200180831161027857829003601f168201915b505050918352505060048201546001600160a01b0381166020830152600160a01b900460ff16151560408201526005820180546060909201916102d790610746565b80601f016020809104026020016040519081016040528092919081815260200182805461030390610746565b80156103505780601f1061032557610100808354040283529160200191610350565b820191906000526020600020905b81548152906001019060200180831161033357829003601f168201915b5050505050815250509050919050565b600080548190818061037183610780565b91905055905061037f6104b9565b81815233608082015260608101879052604080516020601f8701819004810282018101909252858152908690869081908401838280828437600092018290525060c0860194909452505042602080850191825289151560a086015285845260019081905260409384902085518155915190820155918301516002830155506060820151829190600382019061041490826107f8565b50608082015160048201805460a08501511515600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117905560c0820151600582019061046290826107f8565b5050604051610473915088906108b8565b6040519081900381208382529033907fb37102117f72d4f80ea90641358393efa0bea2f61fa4946f725911453946f5579060200160405180910390a35095945050505050565b6040518060e001604052806000815260200160008152602001600081526020016060815260200160006001600160a01b03168152602001600015158152602001606081525090565b60006020828403121561051357600080fd5b5035919050565b60005b8381101561053557818101518382015260200161051d565b50506000910152565b6000815180845261055681602086016020860161051a565b601f01601f19169290920160200192915050565b602081528151602082015260208201516040820152604082015160608201526000606083015160e060808401526105a561010084018261053e565b905060018060a01b0360808501511660a084015260a0840151151560c084015260c0840151601f198483030160e08501526105e0828261053e565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b8035801515811461060f57600080fd5b919050565b60008083601f84011261062657600080fd5b50813567ffffffffffffffff81111561063e57600080fd5b60208301915083602082850101111561065657600080fd5b9250929050565b6000806000806060858703121561067357600080fd5b843567ffffffffffffffff8082111561068b57600080fd5b818701915087601f83011261069f57600080fd5b8135818111156106b1576106b16105e9565b604051601f8201601f19908116603f011681019083821181831017156106d9576106d96105e9565b816040528281528a60208487010111156106f257600080fd5b82602086016020830137600060208483010152809850505050610717602088016105ff565b9450604087013591508082111561072d57600080fd5b5061073a87828801610614565b95989497509550505050565b600181811c9082168061075a57607f821691505b60208210810361077a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600182016107a057634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156107f3576000816000526020600020601f850160051c810160208610156107d05750805b601f850160051c820191505b818110156107ef578281556001016107dc565b5050505b505050565b815167ffffffffffffffff811115610812576108126105e9565b610826816108208454610746565b846107a7565b602080601f83116001811461085b57600084156108435750858301515b600019600386901b1c1916600185901b1785556107ef565b600085815260208120601f198616915b8281101561088a5788860151825594840194600190910190840161086b565b50858210156108a85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516108ca81846020870161051a565b919091019291505056fea2646970667358221220236467ef6ad6bdad6c1d079d48c4c645fd13ba4203336ec40754979fb108752e64736f6c63430008170033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806320c5429b1461005157806329be4db2146100665780638da5cb5b1461008f578063ad6aebd8146100ce575b600080fd5b61006461005f366004610501565b6100ef565b005b610079610074366004610501565b6101a5565b604051610086919061056a565b60405180910390f35b6100b67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610086565b6100e16100dc36600461065d565b610360565b604051908152602001610086565b6000818152600160205260408120805490910361011f5760405163c5723b5160e01b815260040160405180910390fd5b60048101546001600160a01b0316331461014c57604051634ca8886760e01b815260040160405180910390fd5b60028101541561016f5760405163905e710760e01b815260040160405180910390fd5b6004810154600160a01b900460ff1661019b5760405163157bd4c360e01b815260040160405180910390fd5b4260029091015550565b6101ad6104b9565b6000548211156101d05760405163c5723b5160e01b815260040160405180910390fd5b600160008381526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201805461021c90610746565b80601f016020809104026020016040519081016040528092919081815260200182805461024890610746565b80156102955780601f1061026a57610100808354040283529160200191610295565b820191906000526020600020905b81548152906001019060200180831161027857829003601f168201915b505050918352505060048201546001600160a01b0381166020830152600160a01b900460ff16151560408201526005820180546060909201916102d790610746565b80601f016020809104026020016040519081016040528092919081815260200182805461030390610746565b80156103505780601f1061032557610100808354040283529160200191610350565b820191906000526020600020905b81548152906001019060200180831161033357829003601f168201915b5050505050815250509050919050565b600080548190818061037183610780565b91905055905061037f6104b9565b81815233608082015260608101879052604080516020601f8701819004810282018101909252858152908690869081908401838280828437600092018290525060c0860194909452505042602080850191825289151560a086015285845260019081905260409384902085518155915190820155918301516002830155506060820151829190600382019061041490826107f8565b50608082015160048201805460a08501511515600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117905560c0820151600582019061046290826107f8565b5050604051610473915088906108b8565b6040519081900381208382529033907fb37102117f72d4f80ea90641358393efa0bea2f61fa4946f725911453946f5579060200160405180910390a35095945050505050565b6040518060e001604052806000815260200160008152602001600081526020016060815260200160006001600160a01b03168152602001600015158152602001606081525090565b60006020828403121561051357600080fd5b5035919050565b60005b8381101561053557818101518382015260200161051d565b50506000910152565b6000815180845261055681602086016020860161051a565b601f01601f19169290920160200192915050565b602081528151602082015260208201516040820152604082015160608201526000606083015160e060808401526105a561010084018261053e565b905060018060a01b0360808501511660a084015260a0840151151560c084015260c0840151601f198483030160e08501526105e0828261053e565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b8035801515811461060f57600080fd5b919050565b60008083601f84011261062657600080fd5b50813567ffffffffffffffff81111561063e57600080fd5b60208301915083602082850101111561065657600080fd5b9250929050565b6000806000806060858703121561067357600080fd5b843567ffffffffffffffff8082111561068b57600080fd5b818701915087601f83011261069f57600080fd5b8135818111156106b1576106b16105e9565b604051601f8201601f19908116603f011681019083821181831017156106d9576106d96105e9565b816040528281528a60208487010111156106f257600080fd5b82602086016020830137600060208483010152809850505050610717602088016105ff565b9450604087013591508082111561072d57600080fd5b5061073a87828801610614565b95989497509550505050565b600181811c9082168061075a57607f821691505b60208210810361077a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600182016107a057634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156107f3576000816000526020600020601f850160051c810160208610156107d05750805b601f850160051c820191505b818110156107ef578281556001016107dc565b5050505b505050565b815167ffffffffffffffff811115610812576108126105e9565b610826816108208454610746565b846107a7565b602080601f83116001811461085b57600084156108435750858301515b600019600386901b1c1916600185901b1785556107ef565b600085815260208120601f198616915b8281101561088a5788860151825594840194600190910190840161086b565b50858210156108a85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516108ca81846020870161051a565b919091019291505056fea2646970667358221220236467ef6ad6bdad6c1d079d48c4c645fd13ba4203336ec40754979fb108752e64736f6c63430008170033",
  "devdoc": {
    "events": {
      "Attested(address,string,uint256)": {
        "params": {
          "attester": "The attesting account.",
          "recipient": "The recipient of the attestation.",
          "uid": "The UID the revoked attestation."
        }
      },
      "Revoked(string,address,uint256)": {
        "params": {
          "attester": "The attesting account.",
          "recipient": "The recipient of the attestation.",
          "uid": "The UID the revoked attestation."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "attest(string,bool,string)": {
        "params": {
          "data": "The custom attestation data.",
          "recipient": "The recipient of the attestation.",
          "revocable": "Whether the attestation is revocable."
        },
        "returns": {
          "_0": "The UID of the new attestation."
        }
      },
      "constructor": {
        "details": "Creates a new SolAttest instance."
      },
      "getAttestation(uint256)": {
        "params": {
          "uid": "The UID of the attestation to retrieve."
        },
        "returns": {
          "_0": "The attestation data members."
        }
      }
    },
    "title": "SolAttest",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Attested(address,string,uint256)": {
        "notice": "Emitted when an attestation has been made."
      },
      "Revoked(string,address,uint256)": {
        "notice": "Emitted when an attestation has been revoked."
      }
    },
    "kind": "user",
    "methods": {
      "attest(string,bool,string)": {
        "notice": "Attests to a specific schema."
      },
      "getAttestation(uint256)": {
        "notice": "Returns an existing attestation by UID."
      }
    },
    "notice": "The Solana Attestations protocol.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 54,
        "contract": "contracts/YourContract.sol:YourContract",
        "label": "lastUid",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/YourContract.sol:YourContract",
        "label": "_db",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Attestation)51_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Attestation)51_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct YourContract.Attestation)",
        "numberOfBytes": "32",
        "value": "t_struct(Attestation)51_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Attestation)51_storage": {
        "encoding": "inplace",
        "label": "struct YourContract.Attestation",
        "members": [
          {
            "astId": 38,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "uid",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 40,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "time",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 42,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "revocationTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 44,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "recipient",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 46,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "attester",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 48,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "revocable",
            "offset": 20,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 50,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "data",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}